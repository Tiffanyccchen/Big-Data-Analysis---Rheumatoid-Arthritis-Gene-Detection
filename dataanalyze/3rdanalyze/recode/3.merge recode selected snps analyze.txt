#my path

setwd("C:/Users/user/Desktop")
datafirst9<-fread("C:/Users/user/Desktop/BDA/data/naracvarsplit/datafirst9.csv",header=T,sep=",",na.strings="?")
 
# list all csv files from the current directory
list.files(pattern=".csv$") # use the pattern argument to define a common pattern  for import files with regex. Here: .csv
 
# create a list from these files
list.filenames<-list.files(pattern=".csv$")
 
# create an empty list that will serve as a container to receive the incoming files
list.data<-list()
 
# create a loop to read in your data
require(data.table)
for (i in 1:length(list.filenames)){
gc()
list.data[[i]]<-fread(list.filenames[i])
}


gc()
#convert into dataframe-----------------------------------------

for(i in 1:44){
gc()
df<-list.data[i]
df<-as.data.frame(df)
assign(paste("df",i,sep=""),df)
}
dim(df1)


#merge data---------------------------------------------------
select<-as.matrix(rep(1,2062),ncol=1)
select<-data.frame(select)
dim(select)
for(i in 1:44){
a<-lapply( paste('df', i, sep=''), get )
a<-data.frame(a)
a<-a[,-c(1)]
select<-cbind(select,a)
}
select<-select[,-1]
dim(select)
select<-data.frame(select)
str(select)

#remove duplicate columns-------------------------------------
ss <- select[, !duplicated(colnames(select))]
dim(ss)
ss[is.na(ss)] <- "?_?"
write.csv(ss,"selectsnps.csv")
select<-ss

#random forest analyze----------------------------------------
select<-fread("C:/Users/user/Desktop/selectsnpstran.csv",header=T,sep=",",na.strings=c("?_?","NA"))
selectsnps<-cbind(datafirst9$Affection,select)
str(selectsnps)
selectsnps<-selectsnps[,-c(2)]
selectsnps[] <- lapply( selectsnps, factor) # the "[]" keeps the dataframe structure
 col_names <- names(selectsnps)
colnames(selectsnps)[1] <- "Affection"

gc()

rf=randomForest(Affection ~ . , data =selectsnps,importane = T,do.trace=1000,proximity = T,ntree=1000,na.action=na.roughfix)
rf


#plot---------------------------------------------------------
plot(rf,main="selected 4400(recode) snps set")

layout(matrix(c(1,2),nrow=1),
       width=c(4,1)) 
par(mar=c(5,4,4,0)) #No margin on the right side
plot(rf, log="y",main="selected 4400(recode)snps set")
par(mar=c(5,0,4,2)) #No margin on the left side
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf$err.rate),col=1:4,cex=0.8,fill=1:4)

varImpPlot(rf,type=2,main="Variable Importance selected 4400 snps")

#rf(origin)compare-----------------------------------------------
selectori<-fread("C:/Users/user/Desktop/selectsnps.csv",header=T,sep=",",na.strings=c("","NA"))
selectori<-cbind(datafirst9$Affection,selectori)
selectori[] <- lapply( selectori, factor) # the "[]" keeps the dataframe structure
 col_names <- names(selectori)
colnames(selectori)[1] <- "Affection"
str(selectori)
selectori<-selectori[,-c(2)]

rfori=randomForest(Affection ~ . , data =selectori,importane = T,do.trace=1000,proximity = T,ntree=1000,na.action=na.roughfix)
rfori

#4400 recode:
(21.29+21.44+21.05+20.85+21)/5
(17.42+17.42+16.92+16.42+16.4)/5
(26.61+26.96+26.73+26.96+27.3)/5

#4400 origin:
(21.52+21+21.44+21.34+21.53)/5
(16.92+16.33+17.34+17+17.8)/5
(28+27.42+27.07+27.3+26.7)/5

plot(rfori,main="select 4400 snps set")

layout(matrix(c(1,2),nrow=1),
       width=c(4,1)) 
par(mar=c(5,4,4,0)) #No margin on the right side
plot(rfori, log="y",main="select 4400 snps set")
par(mar=c(5,0,4,2)) #No margin on the left side
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rfori$err.rate),col=1:4,cex=0.8,fill=1:4)

varImpPlot(rfori,type=2,main="Variable Importance selected snps set")
