gc()
time.temp = proc.time()
result <- replicate(50, rfcv(selectsnps[,-c(1)],selectsnps[,1], 
cv.fold=5, scale="log", step=0.5, recursive=FALSE), simplify=FALSE)
error.cv <- sapply(result, "[[", "error.cv")
proc.time()	- time.temp

matplot(result[[1]]$n.var,rowMeans(error.cv), type="o",
lwd=c(2, rep(1, ncol(error.cv))), col=1, lty=1, log="x",
 xlab="Number of snps", ylab="CV Error",main="select vars/wrapper var. selection",xaxt="n",ylim=c(0,0.4))
axis(side=1, at=c(4400,2200,1100,550,275,137,69,34,17,9,4,2,1))

result[[50]]$error.cv
cvselect<-rep(1,13)
for(i in 1:50){
cvselect<-cbind(cvselect,result[[i]]$error.cv)
}
dim(cvselect)
cvselect<-data.frame(cvselect)
cvselect<-cvselect[,-c(1)]
cvselect<-t(cvselect)
write.csv(cvselect,"cvselecttran.csv")
cvselect<-fread("C:/Users/user/Desktop/cvselecttran.csv",header=T,sep=",")
cvselect[,1]

# Boxplot of cv----------------------------------------------
selectvarplot<-boxplot(cvselect, main="snps select by cv.error(recode)/50 times each var.num.(wrapper method)", 
  	xlab="Number of snps", ylab="Error Rate",ylim=c(0.2,0.35))
axis(side=1, at=c(1,2,4,9,17,34,69,137,275,550,1100,2200,4400))

#choose m-----------------------------------------------------------------------
resultp/2 <- rfcv(selectsnps[,-c(1)],selectsnps[,1], 
cv.fold=5, scale="log", step=0.5,mtry=function(p)(p/2) ,recursive=FALSE)
matplot(result.p/2[[1]]$n.var,cbind(error.cv,cv.slect[,1]), type="o",
lwd=c(2, rep(1, ncol(error.cv))), col=1, lty=1, log="x",
 xlab="Number of snps", ylab="CV Error",main="select vars/wrapper var. selection",xaxt="n",ylim=c(0,0.4))


#select first 137 snps plot---------------------------------------------------------
rf=randomForest(Affection ~ . , data =selectsnps,importane = T,do.trace=1000,proximity = T,ntree=5000)
rf

plot(rf,main="")

layout(matrix(c(1,2),nrow=1),
       width=c(4,1)) 
par(mar=c(5,4,4,0)) #No margin on the right side
plot(rf, log="y",main="selected 4400 snps set")
par(mar=c(5,0,4,2)) #No margin on the left side
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf$err.rate),col=1:4,cex=0.8,fill=1:4)

varImpPlot(rf,type=2,main="Variable Importance selected 4400 snps set")

rn <- round(importance(rf), 2)
snpss<-rn[order(rn[,1], decreasing=T),][1:137]
str(snpss)
rn[1]
name137<-names(snpss)
name137<-as.vector(name137)
str(name137)
select137<-selectsnps[ , which(names(selectsnps) %in% name137)]
select137<-setDF(select137)
dim(select137)
write.csv(select137,"select137.csv")

#rf137--------------------------------------------
select137<-fread("C:/Users/user/Desktop/select137tran.csv",header=T,sep=",",na.strings=c("?_?","NA"))
select137<-cbind(datafirst9$Affection,select137)
select137[] <- lapply( select137, factor) # the "[]" keeps the dataframe structure
 col_names <- names(select137)
colnames(select137)[1] <- "Affection"
select137<-select137[,-c(2)]
str(select137)
 
rf137=randomForest(Affection ~ . , data =select137,importane = T,do.trace=5000,proximity = T,ntree=5000,na.action=na.roughfix)
rf137


plot(rf137,main="select 137 snps(recode) set")

layout(matrix(c(1,2),nrow=1),
       width=c(4,1)) 
par(mar=c(5,4,4,0)) #No margin on the right side
plot(rf137, log="y",main="select 137 snps(recode) set")
par(mar=c(5,0,4,2)) #No margin on the left side
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf137$err.rate),col=1:4,cex=0.8,fill=1:4)

varImpPlot(rf137,type=2,main="Variable Importance selected 137 snps (recode) set")

#rf(origin)compare-----------------------------------------------
select137ori<-fread("C:/Users/user/Desktop/select137.csv",header=T,sep=",",na.strings=c("","NA"))
select137ori<-cbind(datafirst9$Affection,select137ori)
select137ori[] <- lapply( select137ori, factor) # the "[]" keeps the dataframe structure
 col_names <- names(select137ori)
colnames(select137ori)[1] <- "Affection"
str(select137ori)
select137ori<-select137ori[,-c(2,3)]

rf137ori=randomForest(Affection ~ . , data =select137ori,do.trace=5000,importane = T,proximity = T,ntree=5000,na.action=na.roughfix)
rf137ori


plot(rf137ori,main="select 137 snps set")

layout(matrix(c(1,2),nrow=1),
       width=c(4,1)) 
par(mar=c(5,4,4,0)) #No margin on the right side
plot(rf137ori, log="y",main="select 137 snps set")
par(mar=c(5,0,4,2)) #No margin on the left side
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("top", colnames(rf137ori$err.rate),col=1:4,cex=0.8,fill=1:4)

varImpPlot(rf137ori,type=2,main="Variable Importance selected 137 snps set")

